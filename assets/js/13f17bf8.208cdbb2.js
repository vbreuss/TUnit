"use strict";(self.webpackChunktunit_docs_site=self.webpackChunktunit_docs_site||[]).push([[4761],{6660:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var r=n(4848),s=n(8453);const o={sidebar_position:11},i="Ordering Tests",a={id:"tutorial-extras/order",title:"Ordering Tests",description:"By default, TUnit tests will run in parallel. This means there is no order and it doesn't make sense to be able to control that.",source:"@site/docs/tutorial-extras/order.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/order",permalink:"/TUnit/docs/tutorial-extras/order",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Depends On",permalink:"/TUnit/docs/tutorial-extras/depends-on"},next:{title:"Parallel Limiter",permalink:"/TUnit/docs/tutorial-extras/parallel-limiter"}},l={},d=[];function c(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"ordering-tests",children:"Ordering Tests"})}),"\n",(0,r.jsx)(t.p,{children:"By default, TUnit tests will run in parallel. This means there is no order and it doesn't make sense to be able to control that."}),"\n",(0,r.jsx)(t.p,{children:"However, if tests aren't running in parallel, they can absolutely be ordered, and this is necessary for some systems."}),"\n",(0,r.jsxs)(t.p,{children:["To control ordering, there is an ",(0,r.jsx)(t.code,{children:"Order"})," property on the ",(0,r.jsx)(t.code,{children:"[NotInParallel]"})," attribute."]}),"\n",(0,r.jsx)(t.p,{children:"Orders will execute from smallest to largest. So 1 first, then 2, then 3, etc."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"using TUnit.Core;\n\nnamespace MyTestProject;\n\npublic class MyTestClass\n{\n    [Test]\n    [NotInParallel(Order = 1)]\n    public async Task MyTest()\n    {\n        \n    }\n\n    [Test]\n    [NotInParallel(Order = 2)]\n    public async Task MyTest2()\n    {\n        \n    }\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var r=n(6540);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);